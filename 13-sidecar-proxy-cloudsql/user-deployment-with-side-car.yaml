apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: user-service
  name: user-service
  namespace: default
spec:
  replicas: 1 #CHANGE
  minReadySeconds: 30
  selector:
    matchLabels:
      app: user-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: user-service
    spec:
      serviceAccountName: ksa-my-project
      restartPolicy: Always
      imagePullSecrets:
      - name: regcredgitlab
      containers:
      - image: PATH TO IMAGE REGISTRY #CHANGE
        imagePullPolicy: Always #IfNotPresent
        name: user-service
        env:
        - name: RDS_DB_NAME
          value: user-service-db
        - name: RDS_PORT
          valueFrom:
            configMapKeyRef:
              key: RDS_PORT
              name: my-project-config
        - name: RDS_USERNAME
          valueFrom:
            configMapKeyRef:
              key: RDS_USERNAME
              name: my-project-config
        - name: RABBIT_HOST
          valueFrom:
            configMapKeyRef:
              key: RABBIT_HOST
              name: my-project-config
        - name: RDS_HOST
          valueFrom:
            configMapKeyRef:
              key: RDS_HOST
              name: my-project-config
        - name: RDS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: RDS_PASSWORD
              name: my-project-secrets
        ports:
        - name: liveness-port
          containerPort: 8001
        readinessProbe:
          httpGet:
            path: /
            port: 8001
          failureThreshold: 5
          periodSeconds: 10
          initialDelaySeconds: 60
        livenessProbe:
          httpGet:
            path: /
            port: 8001
          failureThreshold: 5
          periodSeconds: 10
          initialDelaySeconds: 60
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
          - "/cloud_sql_proxy"

          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # Replace DB_PORT with the port the proxy should listen on
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=my-project-k8s:southamerica-east1:my-project-postgres=tcp:5432"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        # Resource configuration depends on an application's requirements. You
        # should adjust the following values based on what your application
        # needs. For details, see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          requests:
            # The proxy's memory use scales linearly with the number of active
            # connections. Fewer open connections will use less memory. Adjust
            # this value based on your application's requirements.
            memory: "2Gi"
            # The proxy's CPU use scales linearly with the amount of IO between
            # the database and the application. Adjust this value based on your
            # application's requirements.
            cpu:    "1"
      # [END cloud_sql_proxy_k8s_container]
#      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels: #PODS
    app: user-service
  name: user-service
  namespace: default
spec:
  ports:
  - port: 8001 #CHANGE
    protocol: TCP
    targetPort: 8001 #CHANGE
  selector:
    app: user-service